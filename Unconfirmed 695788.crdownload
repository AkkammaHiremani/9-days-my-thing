# -*- coding: utf-8 -*-
"""preprocessing

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Pluoz_M-b5WnD-J1ZAfor7tMiMYMlpTh
"""

from google.colab import drive
drive.mount('sample_data')

pip install pandas

import pandas as pd
df = pd.read_csv("people_data.csv")
print(df)

"""1.getting the Dataset
2.importing libraries
3.importing Dataset
4.finding missing data
->by delecting the particular rows
->by calculating the mean
5.encoding categorical data
6.spilting dataset into training and  test set
7.feature scaling

preprocessing is a process of raw data making it machine learning  model it is the first and curcial step while creating a machine learning model
"""

from sklearn.preprocessing import LabelEncoder
data = ['red','green','blue','green',"maggy","cricket"]
le = LabelEncoder()

encoded = le.fit_transform(data)
print(encoded)

import pandas as pd
data = pd.DataFrame({'Color':['red','green','blue','green',"Biscuit_color","White"]})
encoded_data = pd.get_dummies(data,columns=['Color'])
print(encoded_data)

from sklearn.preprocessing import StandardScaler
data = [[60],[80],[90]]
scaler = StandardScaler()
scaled = scaler.fit_transform(data)
print("Standard Scaled:", scaled)

from sklearn.preprocessing import MinMaxScaler
data = [[100],[80],[90]]
scaler = MinMaxScaler()
scaled = scaler.fit_transform(data)
print("MinMax Scaled:", scaled)

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
data = pd.read_csv("people_data.csv")
data = data.dropna()
print(data)

column_mean = np.mean(data['Age'])
print(("Mean of column:",column_mean))

plt.figure(figsize=[5,5])
plt.hist(data['Age'],bins=10, color='orange')
plt.title('Distribution of column')
plt.xlabel('Value')
plt.ylabel('Frequency')
plt.grid()
plt.show()

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from sklearn.compose import ColumnTransformer
from sklearn.impute import SimpleImputer

data = pd.read_csv("people_data.csv")


print(data)

column_mean = np.mean(data['Age'])
print(("Mean of column:",column_mean))

numeric_cols = ['Age']
categorical_columns = ['Gender']

transformer = ColumnTransformer(
[
    ('imputer',SimpleImputer(strategy='mean'),numeric_cols)
],remainder='passthrough')


data[numeric_cols] = transformer.fit_transform(data[numeric_cols])
print(data)

# syntax : ('name',transformer,column,indices_or_names)
# name :Identifier string for the transformer (any unique name)
# transformer: Any scikit-learn transformer (e.g.,StandardScaler(),OneHotEncoder())

import numpy as np
import matplotlib.pyplot as plt
import pandas as pd

dataset = pd.read_csv('Data.csv')
print(dataset)
x = dataset.iloc[:,:-1].values
y = dataset.iloc[:,:-1].values

print("Original x:")
print(x)
print("\nOriginal x:")
print(x)

n = int(input("Enter the multiplication table: "))
for i in range(1, 11):
  print(f"{n} * {i} = {n*i}")

import pandas as pd
from sklearn.preprocessing import LabelEncoder
data = pd.DataFrame({
    'Name': ['Alice', 'Bob', 'charlie', 'Dimanshow'],
    'City': ['banglore', 'chennai', None, 'hubli'],
    'Age': [24, 27, 29, None]
})

print('Original data')
print(data)
data['City'] = data['City'].fillna('Unknown')


le = LabelEncoder()
data['City'] = le.fit_transform(data['City'])


mean_age = data['Age'].mean()
data['Age'] = data['Age'].fillna(mean_age)


print("\nCleaned and preprocessed Data:")
print(data)

print("\nAge column:")
print(data['Age'])

n1 = input("enter the day")
days_of_week = {
    "Monday": 1,
    "Tuesday": 2,
    "Wednesday": 3,
    "Thursday": 4,
    "Friday": 5,
    "Saturday": 6,
    "Sunday" :7

}
for i in days_of_week:
  if i == n1:
    print(days_of_week[i])