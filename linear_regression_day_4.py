# -*- coding: utf-8 -*-
"""Linear Regression day-4

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1dVlRNJV-VJ-Wqpg5sCRYkbBM4ENGZ5SB
"""



"""predict the relationship between two variables by applying a linear equation to observed data.

y=mx+c

m=n

m=n(∑x2)−(∑x)2n(∑xy)−(∑x)(∑y)
"""

pip install numpy

import numpy as np
import matplotlib.pyplot as plt
from sklearn.linear_model import LinearRegression

hours = [1,2,3,4,5]
marks = [35,45,50,60,75]
x = np.array(hours).reshape(-1,1)
print(x)
y = np.array(marks)
print(y)

import numpy as np
import matplotlib.pyplot as plt
from sklearn.linear_model import LinearRegression

hours = [1,2,3,4,5]
marks = [35,45,50,60,75]
x = np.array(hours).reshape(-1,1)
print(x)
y = np.array(marks)
print(y)

model = LinearRegression()
model.fit(x,y)

predicted = model.predict([[6]])
print(model.predict([[6]]))
print("Predicted marks for 6hours of study:",predicted[0])

plt.scatter(x, y, color= 'blue', label= 'Actual Data')
plt.plot(x, model.predict(x), color= 'red', label= 'Best fit Line')
plt.xlabel('Hours of Study')
plt.ylabel('Marks')
plt.title('study Hours vs Marks')
plt.legend()
plt.grid(True)
plt.show()

import pandas as pd
from sklearn.impute import SimpleImputer
from sklearn.metrics import mean_squared_error, r2_score
import numpy as np
import matplotlib.pyplot as plt
from sklearn.linear_model import LinearRegression

data = pd.read_csv("people_data.csv")

data = data[['Age','Salary']]

imputer = SimpleImputer(strategy='mean')
data_filled = pd.DataFrame(imputer.fit_transform(data), columns=['Age','Salary'])

x = data_filled[['Age']]
y = data_filled[['Salary']]

model = LinearRegression()
model.fit(x, y)

predicted_Salary = model.predict([[32]])
print("\npredicted salary for age 32: ${predicted_salary[0]:.2f}")

y_pred = model.predict(x)
mse = mean_squared_error(y, y_pred)
r2 = r2_score(y, y_pred)

print(f"Mean Squared Error (MSE):{mse:.2f}")
print(f"R-squared (R): {r2:.2f}")


plt.scatter(x, y, color= 'blue', label= 'Actual Data')
plt.plot(x, y_pred, color= 'red', label= 'predicted Line')
plt.xlabel('Age')
plt.ylabel('Salary')
plt.title('Age vs Salary (Linear Regression)')
plt.legend()
plt.grid(True)
plt.show()

from sklearn.metrics import mean_squared_error, r2_score
actual = [3, 5, 7, 9]
predicted = [2.5, 4.5, 6.5, 8.5]
# calculate the MSE
mse = mean_squared_error(actual, predicted)
# calculate the R^2
r2 = r2_score(actual, predicted)

print(f"Mean Squared Error (MSE):{mse:.3f}")
print(f"R-squared (R): {r2:.3f}")