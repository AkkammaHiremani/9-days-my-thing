# -*- coding: utf-8 -*-
"""Support vector

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Xq35c242gCuGpRJr10GNCLxQjk-HRNHk
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

"""importing  the dataet"""

dataset = pd.read_csv('/content/Social_Network_Ads(svm_dataset).csv')
print(dataset.head())
x = dataset.iloc[:, :-1].values
y = dataset.iloc[:, -1].values



"""Splitting the dataset into the Training set and Test set"""

from sklearn.model_selection import train_test_split
x_train, x_test, y_train, y_test = train_test_split(x, y, test_size = 0.25, random_state = 0)

print(x_train)



from sklearn.model_selection import train_test_split
x_train, x_test, y_train, y_test = train_test_split(x, y, test_size = 0.25, random_state = 0)

"""Featurs Scaling"""

from sklearn.preprocessing import StandardScalar
sc = StandardScalar()
X_tarin = sc.fit_transform(X_train)
X_tarin = sc.fit_transform(X_train)

"""Training the SVM model on the Training set"""

from sklearn.svm import SVC
classifier = SVC(kernel = 'linear', random_state = 0)
classifier.fit(x_train, y_train)

"""Predicting a new result"""

print(classifier.predict(sc.transform([[30,87000]])))

"""predicating the test set results

"""

y_pred = classifier.predict(x_test)
print(np.concatenate((y_pred.reshape(len(y_pred),1), y_test.reshape(len(y_test),1)),1))

"""Metrics

"""

from sklearn.metrics import confusion_matrix, accuracy_score
cm = confusion_matrix(y_test, y_pred)
print(cm)
accuracy_score(y_test, y_pred)

x=int(input())
y=int(input())
if(20<10):
  print(pass)
elif(18<2):
  print(fail)
else:
  print("invalid")